{"version":3,"file":"index.js","sources":["src/createBus.tsx","src/ThemeProvider.tsx","src/styled.tsx"],"sourcesContent":["export type Listener<S> = (s: S) => void;\n\nexport type Unsubscriber = () => void;\n\nexport type Channels<S> = { [id: number]: Listener<S> };\n\nexport type Bus<S> = { \n  peek: () => S;\n  set: (s: S) => void;\n  listen: (l: Listener<S>) => Unsubscriber;\n};\n\n/**\n * A simple data bus.\n */\nconst makeBus = function<S>(initial: S): Bus<S> {\n  const channels: Channels<S> = {};\n  let nextAvailableId = 0;\n  let state = initial;\n\n  return {\n    peek: () => state,\n    set: (s) => {\n      state = s;\n      for (const id in channels) {\n        channels[id](state);\n      }\n    },\n    listen: (listener) => {\n      const id = nextAvailableId++;\n      channels[id] = listener;\n      \n      return () => {\n        delete channels[id];\n      };\n    },\n  };\n};\n\nexport default makeBus;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport createBus, { Bus } from './createBus';\nimport { Maybe } from './';\n\nexport type ThemeProviderProps<T> = {\n  theme: T;\n  children?: React.ReactNode;\n};\n\nexport default class ThemeProvider<T> extends React.Component<ThemeProviderProps<T>, {}> {\n  bus: Bus<T>;\n  context: { houndstooth: Maybe<Bus<T>> };\n\n  static childContextTypes = {\n    houndstooth: PropTypes.object.isRequired,\n  };\n\n  constructor(props: ThemeProviderProps<T>) {\n    super(props);\n    this.bus = createBus(props.theme);\n  }\n\n  getChildContext() {\n    return {\n      houndstooth: this.bus,\n    };\n  }\n\n  componentWillMount() {\n    if (this.context.houndstooth) {\n      this.bus.set(this.props.theme);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: ThemeProviderProps<T>) {\n    if (this.context.houndstooth) {\n      this.bus.set(nextProps.theme);\n    }\n  }\n\n  render() {\n    return this.props.children\n      ? React.Children.only(this.props.children)\n      : null;\n  }\n}\n","import React, { createElement, ComponentClass, StatelessComponent, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Bus, Unsubscriber } from './createBus';\nimport { Maybe } from './';\n\nexport type ThemeEnhancedProps<P, T> = P & {\n  theme: T;\n};\n\nexport type ComponentCreator<P> = <T>(strings: TemplateStringsArray, ...keys: any[]) => ComponentClass<P>;\n\nexport default function styled<P extends {}>(tag: any): ComponentCreator<P> {\n  return (strings, ...keys) => {\n    class Styled<T> extends React.Component<any, { theme: Maybe<T> }> {\n      context: { houndstooth: Maybe<Bus<T>> };\n      cleanUp: Maybe<Unsubscriber>;\n\n      static contextTypes = {\n        houndstooth: PropTypes.object,\n      };\n\n      constructor(props: P) {\n        super(props);\n        this.cleanUp = null;\n        this.state = {\n          theme: null,\n        };\n      }\n\n      componentWillMount() {\n        console.log(strings, keys);\n        const staticStyles = []; \n        const dynamicStyles = [];\n        \n        if (this.context.houndstooth) {\n          this.setState({ theme: this.context.houndstooth.peek() });\n        }\n      }\n\n      componentDidMount() {\n        if (this.context.houndstooth) {\n          this.cleanUp = this.context.houndstooth.listen(theme => {\n            this.setState({ theme });\n          })\n        }\n      }\n\n      componentWillUnmount() {\n        if (this.cleanUp) {\n          this.cleanUp();\n        }\n      }\n\n      render() {\n        return createElement<ThemeEnhancedProps<P, T>>(\n          tag,\n          this.props,\n        );\n      }\n    }\n\n    return Styled;\n  };\n}\n"],"names":["tslib_1.__extends","createBus","React","createElement"],"mappings":"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"}